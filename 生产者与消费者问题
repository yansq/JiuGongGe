#include <stdio.h>
#include <stdlib.h>
#include <memory.h>  
#include <pthread.h>  
#include <errno.h>  
#include <math.h> 
#include <semaphore.h>   //POSIX信号量 
char production[3];
pthread_mutex_t mutex;
sem_t empty,full;
int in=0,out=0;
FILE *fp;
void *produce(){
	
	while(!feof(fp)){
	sem_wait(&empty);
	pthread_mutex_lock(&mutex); 
	
		production[in]=fgetc(fp);     //读数据 
		in=(in+1)%4;
		
	sem_post(&full); 
	pthread_mutex_unlock(&mutex);
	}
}
void *consume(){
	for(;;){
	sem_wait(&full);
	pthread_mutex_lock(&mutex);

		printf("%c",production[out]);   //写数据 
		out=(out+1)%4;
		
	sem_post(&empty);
	pthread_mutex_unlock(&mutex);
	}
}

int main()
{
	fp=fopen("file","r");
	pthread_t pro1,pro2,pro3,con1,con2,con3,con4;
	pthread_mutex_init(&mutex, NULL);
	
	
	sem_init(&empty,0,4);
	sem_init(&full,0,0);

	
	pthread_create(&pro1,NULL,produce,NULL);
	pthread_create(&pro2,NULL,produce,NULL);
	pthread_create(&pro3,NULL,produce,NULL);
	pthread_create(&con1,NULL,consume,NULL);
	pthread_create(&con2,NULL,consume,NULL);
	pthread_create(&con3,NULL,consume,NULL);
	pthread_create(&con4,NULL,consume,NULL);
	
	pthread_join(pro1,NULL);
	pthread_join(pro2,NULL);
	pthread_join(pro3,NULL);
	pthread_join(con1,NULL);
	pthread_join(con2,NULL);
	pthread_join(con3,NULL);
	pthread_join(con4,NULL);
	return 0;
}

